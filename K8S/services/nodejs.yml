apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
  namespace: default
  labels:
    app: nodejs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
      - name: nodejs-app-container
        image: amrkedra/nodejs:v3
        ports:
        - containerPort: 2717
        resources:
          requests:
            cpu: 500m
            memory: 2000Mi
          limits:
            cpu: 500m
            memory: 2000Mi
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
  namespace: default
spec:
  selector:
    app: nodejs-app
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: nodejs-app-service
    protocol: TCP
    port: 8080
    targetPort: 2717

---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service-nodeport
  namespace: default
spec:
  selector:
    app: nodejs-app
  type: NodePort
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: nodejs-app
    protocol: TCP
    port: 8097  #this is cluster IP port, used within the cluster by the pods
    targetPort: 2717  # this is the container port 
    nodePort: 30010  # this is the node port which used to connect to the deployment from outside cluster

---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-app-service-loadbalancer
  namespace: default
spec:
  selector:
    app: nodejs-app
  type: LoadBalancer
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: nodejs-app
    protocol: TCP
    port: 8086
    targetPort: 2717
    nodePort: 30050
